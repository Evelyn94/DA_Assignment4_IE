
The feature template file describes which features are used in training and testing.

Each line in the template file denotes one template.

The format of the feature template is %x[row, col], row is relative to the current position of the input data, col specifies the absolute position of the column.

Here is some input data examples

el		DA		O
Abogado		NP		B-PER
General		NP		I-PER  << CURRENT TOKEN
de		SPS		O
Victoria	NP		B-LOC


Template				Expanded Feature
U00:%x[-2,0]				el
U01:%x[-1,0]				abogado
U02:%x[0,0]				General
U03:%x[1,0]				de
U04:%x[2,0]				Victoria
U05:%x[-1,0]/%x[0,0]			abogado/General
U06:%x[0,0]/%x[1,0]			General/de

U10:%x[-2,1]				DA
U11:%x[-1,1]				NP
U12:%x[0,1]				NP
U13:%x[1,1]				SPS
U14:%x[2,1]				NP
U15:%x[-2,1]/%x[-1,1]			DA/NP
U16:%x[-1,1]/%x[0,1]			NP/NP
U17:%x[0,1]/%x[1,1]			NP/SPS
U18:%x[1,1]/%x[2,1]			SPS/NP

U20:%x[-2,1]/%x[-1,1]/%x[0,1]		DA/NP/NP
U21:%x[-1,1]/%x[0,1]/%x[1,1]		NP/NP/SPS
U22:%x[0,1]/%x[1,1]/%x[2,1]		NP/SPS/NP


There are two types of templates.

Unigram template: first character, 'U'. This is a template to describe unigram features. When a template "U12:%x[0,1]" is given, CRF++ automatically generates a set of feature functions(func1 ... funcN) like:

func1 = if (output = B-LOC and feature="U12:NP") return 1 else return 0
func2 = if (output = I-LOC and feature="U01:NP") return 1 else return 0
func3 = if (output = B-PER and feature="U12:NP") return 1 else return 0
func4 = if (output = I-PER and feature="U01:NP") return 1 else return 0
func5 = if (output = B-ORG and feature="U12:NP") return 1 else return 0
func6 = if (output = I-ORG and feature="U01:NP") return 1 else return 0
func7 = if (output = B-MISC and feature="U12:NP") return 1 else return 0
func8 = if (output = I-MISC and feature="U01:NP") return 1 else return 0
func9 = if (output = O and feature="U12:NP") return 1  else return 0
....
funcXX = if (output = I-MISC and feature="U12:NN") return 1  else return 0
funcXY = if (output = O and feature="U12:NN") return 1  else return 0
...


The number of feature functions generated by a template amounts to (L * N), where L is the number of output classes and N is the number of unique string expanded from the given template. In this case L would be 9.(The output classes are [B-LOC, I-LOC, B-PER, I-PER, B-ORG, I-ORG, B-MISC, I-MISC, O])


Bigram template: first character, 'B'

This is a template to descibe bigram features. Only one bigram template ('B') is used. This means that only combinations of previous output token and current token are used as bigram features.This type of template generates a total of (L * L * N) distinct features.

Overall,
unigram: |output tag| x |all possible strings expanded with a macro|
bigram: |output tag| x |output tag| x |all possible strings expanded with a macro|
